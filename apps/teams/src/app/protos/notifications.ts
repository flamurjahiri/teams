/**
* This file is auto-generated by nestjs-proto-gen-ts
*/

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';

export namespace notifications {
    export interface NotificationService {
        sendPhoneMessage(
            data: SendPhoneMessageRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<Reply>;
        makePhoneCalls(
            data: MakePhoneCallRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<Reply>;
        sendVerificationCode(
            data: SendVerificationCodeRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<Reply>;
        verifyCode(
            data: VerifyCodeRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<Reply>;
        sendCustomEmail(
            data: SendCustomEmailRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<Reply>;
        sendTemplateEmails(
            data: SendTemplateEmailRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<Reply>;
    }
    export interface SendPhoneMessageRequest {
        phoneNumbers?: string[];
        body?: string;
        additionalData?: notifications.AdditionalDataReq[];
    }
    export interface MakePhoneCallRequest {
        phoneNumbers?: string[];
        body?: string;
        additionalData?: notifications.AdditionalDataReq[];
        finishOnKey?: number;
        action?: string;
        method?: string;
        actionPerformNumber?: number;
        maxWaitBeforeClose?: number;
        performActionOnEmptyResult?: boolean;
    }
    export interface SendVerificationCodeRequest {
        to?: string;
    }
    export interface VerifyCodeRequest {
        to?: string;
        code?: string;
    }
    export interface Reply {
        success?: boolean;
        message?: string;
        error?: notifications.ErrorReply;
    }
    export interface ErrorReply {
        message?: string;
        code?: number;
    }
    export interface AdditionalDataReq {
        key?: string;
        stringifyValue?: string;
    }
    export interface SendCustomEmailRequest {
        emails?: string[];
        content?: notifications.Content;
        from?: notifications.From;
    }
    export interface Content {
        subject?: string;
        body?: string;
    }
    export interface From {
        email?: string;
        name?: string;
    }
    export interface SendTemplateEmailRequest {
        emails?: string[];
        subject?: string;
        from?: notifications.From;
        templateId?: string;
        additionalData?: notifications.AdditionalDataReq[];
    }
}

